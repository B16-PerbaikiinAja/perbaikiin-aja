name: Spring Boot CI/CD Pipeline

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Debug branch information
        run: |
          echo "GitHub ref: ${{ github.ref }}"
          echo "GitHub event name: ${{ github.event_name }}"
          echo "GitHub branch: ${{ github.ref_name }}"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

      - name: Build and package with Gradle
        run: ./gradlew bootJar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: build/libs/*.jar

  deploy-staging:
    needs: build
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest

    steps:
      - name: Debug branch information
        run: |
          echo "GitHub ref: ${{ github.ref }}"
          echo "GitHub event name: ${{ github.event_name }}"
          echo "Is staging branch: ${{ github.ref == 'refs/heads/staging' }}"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: .

      - name: List downloaded files
        run: ls -la

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup known hosts
        run: |
          mkdir -p ~/.ssh
          echo "Resolving hostname..."
          getent hosts ${{ secrets.EC2_HOST }} || echo "Could not resolve hostname with getent"
          echo "Attempting to scan with ssh-keyscan..."
          ssh-keyscan -v -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts || echo "Warning: ssh-keyscan failed"
          cat ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          PG_HOST: ${{ secrets.PG_HOST }}
          PG_USER: ${{ secrets.PG_USER }}
          PG_PASS: ${{ secrets.PG_PASS }}
          PORT: ${{ secrets.PORT || '8080' }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        run: |
          # Find the executable JAR file (avoid the -plain.jar)
          JAR_FILE=$(find . -name "*.jar" | grep -v plain | head -n 1)
          echo "Deploying $JAR_FILE to staging server"

          # Transfer jar file
          scp $JAR_FILE $EC2_USERNAME@$EC2_HOST:~/perbaikiinaja-backend.jar

          # Create environment file on the server
          ssh $EC2_USERNAME@$EC2_HOST << EOF
            echo "PG_HOST=${PG_HOST}" > ~/.env
            echo "PG_USER=${PG_USER}" >> ~/.env
            echo "PG_PASS=${PG_PASS}" >> ~/.env
            echo "PORT=${PORT}" >> ~/.env
            echo "JWT_SECRET_KEY=${JWT_SECRET_KEY}" >> ~/.env

            # Stop existing application if running
            if pgrep -f "perbaikiinaja-backend.jar"; then
              sudo kill \$(pgrep -f "perbaikiinaja-backend.jar")
            fi

            # Wait for process to terminate
            sleep 5

            # Start application using the environment file
            nohup java -jar ~/perbaikiinaja-backend.jar > ~/app.log 2>&1 &

            echo "Application deployed and started"
          EOF
